.TH _printf man page "15 march 2022"

.SH NAME
_printf

.SH SYNOPSIS

#include "main.h"

_printf(const char *format, ...);

.SH DESCRIPTION
The printf function produces output in compliance with certain format and
conversion specifiers that are described below.

.SS
The specifiers are as follows:

.PP
c:
 The int argument is converted to an unsigned char, and
the resulting character is written.

R:
 The char* argument is a pointer to an array of characters
(pointer to a string). Characters from the array are outputted
in ROT13 up to (but not including) the terminating NULL character.

S:
A non printable character is converted into a \x, followed by
the ASCII code value in upper case hexadecimal notation.

i, d:
The integer argument is converted into signed decimal
notation.

s:
The char* argument is a pointer to to an array of
characters (pointer to a string). Characters from
the array are outputted up to (but not including) the
terminating NULL character.

b:
The int argument is convereted into binary notation.

x, X:
The unsigned int argument is converted to unsigned hexadecimal
notation. The lettes abcdef are used for x conversions and the
letters ABCDEF are used for X conversions.

u:
The unsigned integer argument is converted into an unsigned
decimal notation.

o:
The unsigned integer argument is convereted into unsigned
octal notation.

r:
The char* argument is a pointer to an array of characters
(pointer to a string). Characters from the array are outputted
in reverse upto (but not including) the terminating NULL character.

p:
The char* argument is a pointer to an array. The address of the pointer
is outputted.

.SH RETURN VALUE

Upon successful return, these functions return the number of characters
printed (excluding the null byte used to end ouput to strings). If an
output error occurs, a negative value is returned.

.SH EXAMPLES

 To print integers in decimal notation:

_printf("integer:[%d, %i\\n]", int, int2);

To print in unsigned octal:

_printf("Unsigned octal:[%o]\\n", uo);

To print in unsigned hexadecimal:

_printf("Unsigned hexadecimal:[%x, %X]\\n", uh, uh);

To print a char:

_printf("Character:[%c]\\n", 'H');

To print a string:

_printf("String:[%s]\\n", "I am a string !");

To print a string in reverse:

_printf("Reverse string:[%r]\\n", string);

To print in ROT13:

_printf("ROT13:[%R]\\n", string);

To print in binary:

_printf("binary:[%b]\\n", bin);

To print the address of a pointer:

_printf("Address:[%p]\\n", addr);

.SH SEE ALSO
man printf(3)

.SH AUTHOR
James Honey, Declan Noble.

